┌─────────────────────────────────────────────────────────────────────────────┐
│                         🎙️ AI VOICE COACH ARCHITECTURE                      │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│                              FRONTEND (Angular)                              │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                              │
│  ┌────────────────────────────────────────────────────────────────────┐   │
│  │                    Voice Coach Component                            │   │
│  │  ┌──────────────────────────────────────────────────────────────┐ │   │
│  │  │  1. Exercise Selection (10+ sentences)                        │ │   │
│  │  │     • Easy / Medium / Hard difficulty                         │ │   │
│  │  │     • Categories: Tongue twisters, Conversation, etc.        │ │   │
│  │  └──────────────────────────────────────────────────────────────┘ │   │
│  │                                                                     │   │
│  │  ┌──────────────────────────────────────────────────────────────┐ │   │
│  │  │  2. Audio Recording (MediaRecorder API)                       │ │   │
│  │  │     • Start/Stop recording controls                           │ │   │
│  │  │     • Real-time recording timer                               │ │   │
│  │  │     • Audio playback                                          │ │   │
│  │  └──────────────────────────────────────────────────────────────┘ │   │
│  │                                                                     │   │
│  │  ┌──────────────────────────────────────────────────────────────┐ │   │
│  │  │  3. Text-to-Speech Playback                                   │ │   │
│  │  │     • Listen to correct pronunciation                         │ │   │
│  │  │     • High-quality AI-generated voice                         │ │   │
│  │  └──────────────────────────────────────────────────────────────┘ │   │
│  │                                                                     │   │
│  │  ┌──────────────────────────────────────────────────────────────┐ │   │
│  │  │  4. Results Display                                           │ │   │
│  │  │     • Score visualization (0-100)                             │ │   │
│  │  │     • Color-coded feedback                                    │ │   │
│  │  │     • Pronunciation errors list                               │ │   │
│  │  │     • Improvement suggestions                                 │ │   │
│  │  └──────────────────────────────────────────────────────────────┘ │   │
│  │                                                                     │   │
│  │  ┌──────────────────────────────────────────────────────────────┐ │   │
│  │  │  5. History Tracking                                          │ │   │
│  │  │     • Last 10 attempts                                        │ │   │
│  │  │     • Scores and timestamps                                   │ │   │
│  │  └──────────────────────────────────────────────────────────────┘ │   │
│  └────────────────────────────────────────────────────────────────────┘   │
│                                      ▲                                       │
│                                      │                                       │
│  ┌────────────────────────────────────────────────────────────────────┐   │
│  │               Voice Coach Service (HTTP Client)                     │   │
│  │  • analyzePronunciation(audio, text)                               │   │
│  │  • getTextToSpeech(text)                                           │   │
│  │  • getExercises()                                                  │   │
│  └────────────────────────────────────────────────────────────────────┘   │
│                                                                              │
└──────────────────────────────────────┬───────────────────────────────────────┘
                                       │
                                       │ HTTP/REST API
                                       │ (http://localhost:8083/api/voice)
                                       │
┌──────────────────────────────────────▼───────────────────────────────────────┐
│                          BACKEND (Spring Boot)                               │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                              │
│  ┌────────────────────────────────────────────────────────────────────┐   │
│  │                    Voice Coach Controller                           │   │
│  │  ┌──────────────────────────────────────────────────────────────┐ │   │
│  │  │  POST /api/voice/analyze                                      │ │   │
│  │  │    • Receives: Audio file + Original text                     │ │   │
│  │  │    • Returns: Score, feedback, errors, suggestions            │ │   │
│  │  └──────────────────────────────────────────────────────────────┘ │   │
│  │                                                                     │   │
│  │  ┌──────────────────────────────────────────────────────────────┐ │   │
│  │  │  POST /api/voice/text-to-speech                               │ │   │
│  │  │    • Receives: Text string                                    │ │   │
│  │  │    • Returns: MP3 audio file                                  │ │   │
│  │  └──────────────────────────────────────────────────────────────┘ │   │
│  │                                                                     │   │
│  │  ┌──────────────────────────────────────────────────────────────┐ │   │
│  │  │  GET /api/voice/health                                        │ │   │
│  │  │    • Health check endpoint                                    │ │   │
│  │  └──────────────────────────────────────────────────────────────┘ │   │
│  └────────────────────────────────────────────────────────────────────┘   │
│                                      ▲                                       │
│                                      │                                       │
│  ┌────────────────────────────────────────────────────────────────────┐   │
│  │                    Voice Coach Service                              │   │
│  │                                                                      │   │
│  │  1. analyzePronunciation(audio, text)                              │   │
│  │     ├─> Transcribe audio (Whisper API)                             │   │
│  │     ├─> Calculate similarity score (Levenshtein)                   │   │
│  │     └─> Generate feedback (GPT-3.5 API)                            │   │
│  │                                                                      │   │
│  │  2. generateTextToSpeech(text)                                      │   │
│  │     └─> Generate audio (OpenAI TTS API)                            │   │
│  │                                                                      │   │
│  │  3. Levenshtein Distance Algorithm                                  │   │
│  │     └─> Calculate pronunciation accuracy                            │   │
│  └────────────────────────────────────────────────────────────────────┘   │
│                                                                              │
└──────────────────────────────────────┬───────────────────────────────────────┘
                                       │
                                       │ HTTPS API Calls
                                       │
┌──────────────────────────────────────▼───────────────────────────────────────┐
│                         OPENAI SERVICES (Cloud)                              │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                              │
│  ┌────────────────────────────────────────────────────────────────────┐   │
│  │  🎯 Whisper API (Speech-to-Text)                                   │   │
│  │  • Converts audio recording to text                                │   │
│  │  • Supports multiple audio formats                                 │   │
│  │  • High accuracy transcription                                     │   │
│  │  • Cost: ~$0.006/minute                                            │   │
│  └────────────────────────────────────────────────────────────────────┘   │
│                                                                              │
│  ┌────────────────────────────────────────────────────────────────────┐   │
│  │  🤖 GPT-3.5-turbo (Feedback Generation)                            │   │
│  │  • Analyzes transcription vs original                              │   │
│  │  • Generates personalized feedback                                 │   │
│  │  • Identifies pronunciation errors                                 │   │
│  │  • Provides improvement suggestions                                │   │
│  │  • Cost: ~$0.002/analysis                                          │   │
│  └────────────────────────────────────────────────────────────────────┘   │
│                                                                              │
│  ┌────────────────────────────────────────────────────────────────────┐   │
│  │  🔊 TTS-1 API (Text-to-Speech)                                     │   │
│  │  • Converts text to natural-sounding speech                        │   │
│  │  • Multiple voice options (alloy, echo, etc.)                      │   │
│  │  • High-quality MP3 output                                         │   │
│  │  • Cost: ~$0.015/1K characters                                     │   │
│  └────────────────────────────────────────────────────────────────────┘   │
│                                                                              │
└─────────────────────────────────────────────────────────────────────────────┘


┌─────────────────────────────────────────────────────────────────────────────┐
│                            DATA FLOW EXAMPLE                                 │
└─────────────────────────────────────────────────────────────────────────────┘

  Student Action                  Processing                    AI Response
  
  1. Select Exercise  ──────────────────────────────────▶  Exercise loaded
     "She sells                                             in UI
     seashells..."
     
                                                         
  2. Click "Listen   ──────────────────────────────────▶  Backend calls
     to Example"           │                              OpenAI TTS
                           │                                   │
                           └──────────────────────────────────┘
                           │                                   │
                           └──────────────────────────────────▶  MP3 audio
                                                                 plays
                                                         
                                                         
  3. Click "Start    ──────────────────────────────────▶  Browser starts
     Recording"                                            MediaRecorder
                                                         
     Speak: "She                                        
     shels seashells                                    
     by the seashore"                                   
     
                                                         
  4. Click "Stop     ──────────────────────────────────▶  Audio saved as
     Recording"                                            WebM blob
                                                         
                                                         
  5. Auto-analyze    ──────────────────────────────────▶  Upload to backend
                           │                                   │
                           │                          Backend sends to
                           │                          Whisper API
                           │                                   │
                           │                          Transcribed:
                           │                          "She shels seashells
                           │                           by the seashore"
                           │                                   │
                           │                          Calculate similarity:
                           │                          Score = 92/100
                           │                                   │
                           │                          Send to GPT-3.5:
                           │                          Generate feedback
                           │                                   │
                           └──────────────────────────────────┘
                                                              │
                                                              ▼
  6. View Results    ◀────────────────────────────────  Response returned:
                                                        {
                                                          score: 92,
                                                          transcription: "...",
                                                          feedback: "Great!...",
                                                          errors: ["sells→shels"],
                                                          suggestions: [...]
                                                        }


┌─────────────────────────────────────────────────────────────────────────────┐
│                           SCORING ALGORITHM                                  │
└─────────────────────────────────────────────────────────────────────────────┘

  Original Text:      "She sells seashells by the seashore"
  Transcription:      "She shels seashells by the seashore"
  
  Step 1: Normalize
    ├─> Lowercase:     "she sells seashells by the seashore"
    └─> Remove punct:  "she sells seashells by the seashore"
  
  Step 2: Levenshtein Distance
    ├─> Edit operations needed: 2 (sells→shels)
    └─> Max length: 37 characters
  
  Step 3: Calculate Score
    ├─> Similarity = 1 - (2/37) = 0.946
    └─> Score = 0.946 × 100 = 94.6/100
  
  Step 4: AI Feedback
    ├─> Score 94.6 = "Excellent!"
    ├─> Error: "sells" pronounced as "shels"
    └─> Suggestion: "Focus on the 'se' sound in 'sells'"


┌─────────────────────────────────────────────────────────────────────────────┐
│                            FILE STRUCTURE                                    │
└─────────────────────────────────────────────────────────────────────────────┘

  FRONTEND (Angular)
  ├─ src/app/services/
  │  └─ voice-coach.service.ts         ── API client & exercise management
  │
  ├─ src/app/core/voice-coach/
  │  ├─ voice-coach.component.ts       ── Main logic & state management
  │  ├─ voice-coach.component.html     ── UI template with all features
  │  └─ voice-coach.component.css      ── Modern styling with animations

  BACKEND (Spring Boot)
  ├─ controllers/
  │  ├─ VoiceCoachController.java      ── REST API endpoints
  │  └─ VoiceCoachConfigController.java ── Configuration check
  │
  ├─ services/
  │  └─ VoiceCoachService.java         ── OpenAI integration & algorithms
  │
  ├─ DTO/
  │  ├─ VoiceAnalysisResponse.java     ── Analysis response structure
  │  └─ TextToSpeechRequest.java       ── TTS request structure
  │
  └─ resources/
     └─ application.properties          ── OpenAI API key configuration

  DOCUMENTATION
  ├─ VOICE_COACH_README.md             ── Complete setup guide
  ├─ QUICK_START_VOICE_COACH.md        ── Quick reference
  ├─ voice-coach-test.html             ── Standalone test page
  └─ ARCHITECTURE.txt                   ── This file!


┌─────────────────────────────────────────────────────────────────────────────┐
│                         TECHNOLOGY DECISIONS                                 │
└─────────────────────────────────────────────────────────────────────────────┘

  Why OpenAI Whisper?
  ✓ Industry-leading accuracy
  ✓ Supports multiple languages
  ✓ Handles various audio formats
  ✓ Affordable pricing ($0.006/min)
  ✓ Simple REST API
  
  Why GPT-3.5-turbo?
  ✓ Intelligent, contextual feedback
  ✓ Generates personalized suggestions
  ✓ Fast response time
  ✓ Cost-effective ($0.002/request)
  ✓ Consistent quality
  
  Why OpenAI TTS?
  ✓ Natural-sounding voices
  ✓ High-quality audio output
  ✓ Multiple voice options
  ✓ Easy integration
  ✓ Reasonable pricing
  
  Why Levenshtein Distance?
  ✓ Standard algorithm for text similarity
  ✓ Fast computation
  ✓ Accurate for pronunciation scoring
  ✓ No external dependencies
  ✓ Easy to understand and modify


┌─────────────────────────────────────────────────────────────────────────────┐
│                           SUCCESS METRICS                                    │
└─────────────────────────────────────────────────────────────────────────────┘

  User Experience
  ✓ < 2 seconds: API response time
  ✓ < 5 seconds: Total analysis time
  ✓ 95%+: User satisfaction target
  ✓ Mobile-responsive design
  ✓ Intuitive interface
  
  Educational Outcomes
  ✓ Clear score visualization (0-100)
  ✓ Actionable feedback
  ✓ Specific error identification
  ✓ Improvement tracking
  ✓ Progress monitoring
  
  Cost Efficiency
  ✓ ~$0.01 per practice session
  ✓ $1-2 per 100 sessions
  ✓ Scalable pricing
  ✓ No infrastructure costs


┌─────────────────────────────────────────────────────────────────────────────┐
│                              CONCLUSION                                      │
└─────────────────────────────────────────────────────────────────────────────┘

  🎉 Complete AI Voice Coach Implementation
  
  ✅ Frontend: Beautiful, responsive Angular interface
  ✅ Backend: Robust Spring Boot REST API
  ✅ AI Integration: OpenAI Whisper, GPT-3.5, TTS
  ✅ Scoring: Levenshtein distance algorithm
  ✅ Features: Recording, playback, analysis, feedback
  ✅ Documentation: Comprehensive guides and tests
  
  Ready for production use! 🚀
